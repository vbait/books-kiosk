{"version":3,"sources":["components/Header/Header.jsx","components/Container/Container.jsx","components/BooksList/Footer.jsx","components/BooksList/BooksList.jsx","components/BookItem/BookItem.jsx","pages/Books/Books.jsx","Dashboard.jsx","serviceWorker.js","index.jsx","components/Container/logo.svg"],"names":["Header","className","href","id","Container","children","role","src","LogoImg","alt","width","height","Footer","BooksList","xmlns","preserveAspectRatio","focusable","aria-label","fill","Button","variant","size","Books","BookItem","Dashboard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"uLAqBeA,MAnBf,WACE,OACE,yBAAKC,UAAU,yDACb,uBAAGA,UAAU,+BAA+BC,KAAK,KAAjD,eAGA,yBAAKD,UAAU,qCAAqCE,GAAG,yBACrD,wBAAIF,UAAU,sBACZ,wBAAIA,UAAU,mBACZ,uBAAGA,UAAU,WAAWC,KAAK,KAA7B,kB,gBCWGE,MAlBf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OACE,0BAAMC,KAAK,OAAOL,UAAU,aAC1B,yBAAKA,UAAU,gFACb,yBAAKA,UAAU,OAAOM,IAAKC,IAASC,IAAI,GAAGC,MAAM,KAAKC,OAAO,OAC7D,yBAAKV,UAAU,UACb,wBAAIA,UAAU,0BAAd,WAGHI,K,QCFQO,MARf,YAA+B,IAAbP,EAAY,EAAZA,SAChB,OAAO,yBAAKJ,UAAU,2BAA2BI,KCAnD,SAASQ,EAAT,GAAkC,IAAbR,EAAY,EAAZA,SACnB,OAAO,yBAAKJ,UAAU,uCAAuCI,IAO/DQ,EAAUD,OAASA,EAEJC,QC2BAA,MAtCf,WACE,OACE,yBAAKZ,UAAU,yBACb,yBACEA,UAAU,kCACVS,MAAM,KACNC,OAAO,KACPG,MAAM,6BACNC,oBAAoB,iBACpBC,UAAU,QACVV,KAAK,MACLW,aAAW,sBAEX,8CACA,0BAAMP,MAAM,OAAOC,OAAO,OAAOO,KAAK,aAExC,yBAAKjB,UAAU,+DACb,yBAAKA,UAAU,kCACb,6BACE,4BAAQA,UAAU,0BAAlB,aACA,wBAAIA,UAAU,QAAd,cACA,8CAEF,6BACE,kBAACkB,EAAA,EAAD,CAAQC,QAAQ,OAAOC,KAAK,MAA5B,QADF,IAKE,kBAACF,EAAA,EAAD,CAAQC,QAAQ,cAAcC,KAAK,MAAnC,eCbGC,MAbf,WACE,OACE,kBAAC,EAAD,KACE,kBAACC,EAAD,MACA,kBAAC,EAAUX,OAAX,KACE,kBAACO,EAAA,EAAD,CAAQC,QAAQ,OAAOC,KAAK,MAA5B,eCMOG,MAXf,WACE,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,KACE,kBAAC,EAAD,SCEYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,kBEzI5BC,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.adfea698.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header() {\n  return (\n    <nav className=\"navbar navbar-expand-lg fixed-top navbar-dark bg-dark\">\n      <a className=\"navbar-brand mr-auto mr-lg-0\" href=\".\">\n        Books Kiosk\n      </a>\n      <div className=\"navbar-collapse offcanvas-collapse\" id=\"navbarsExampleDefault\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item active\">\n            <a className=\"nav-link\" href=\".\">\n              Dashboard\n            </a>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport LogoImg from './logo.svg';\n\nfunction Container({ children }) {\n  return (\n    <main role=\"main\" className=\"container\">\n      <div className=\"d-flex align-items-center p-3 my-3 text-white-50 bg-purple rounded shadow-sm\">\n        <img className=\"mr-3\" src={LogoImg} alt=\"\" width=\"48\" height=\"48\" />\n        <div className=\"lh-100\">\n          <h5 className=\"mb-0 text-white lh-100\">Books</h5>\n        </div>\n      </div>\n      {children}\n    </main>\n  );\n}\n\nContainer.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.node]).isRequired,\n};\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Footer({ children }) {\n  return <div className=\"d-block text-right mt-3\">{children}</div>;\n}\n\nFooter.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.node]).isRequired,\n};\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Footer from './Footer';\n\nfunction BooksList({ children }) {\n  return <div className=\"my-3 p-3 bg-white rounded shadow-sm\">{children}</div>;\n}\n\nBooksList.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.node]).isRequired,\n};\n\nBooksList.Footer = Footer;\n\nexport default BooksList;\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\n\nfunction BooksList() {\n  return (\n    <div className=\"media text-muted pt-3\">\n      <svg\n        className=\"bd-placeholder-img mr-2 rounded\"\n        width=\"50\"\n        height=\"50\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        preserveAspectRatio=\"xMidYMid slice\"\n        focusable=\"false\"\n        role=\"img\"\n        aria-label=\"Placeholder: 32x32\"\n      >\n        <title>Placeholder</title>\n        <rect width=\"100%\" height=\"100%\" fill=\"#007bff\" />\n      </svg>\n      <div className=\"media-body pb-3 mb-0 small lh-125 border-bottom border-gray\">\n        <div className=\"d-flex justify-content-between\">\n          <div>\n            <strong className=\"d-block text-gray-dark\">@username</strong>\n            <h6 className=\"mb-0\">Book Title</h6>\n            <small>12/12/2345</small>\n          </div>\n          <div>\n            <Button variant=\"link\" size=\"sm\">\n              Edit\n            </Button>\n            |\n            <Button variant=\"link danger\" size=\"sm\">\n              Delete\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default BooksList;\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport BooksList from '../../components/BooksList';\nimport BookItem from '../../components/BookItem';\n\nfunction Books() {\n  return (\n    <BooksList>\n      <BookItem />\n      <BooksList.Footer>\n        <Button variant=\"link\" size=\"sm\">\n          Add Book\n        </Button>\n      </BooksList.Footer>\n    </BooksList>\n  );\n}\n\nexport default Books;\n","import React from 'react';\nimport Header from './components/Header';\nimport Container from './components/Container';\nimport Books from './pages/Books';\n\nfunction Dashboard() {\n  return (\n    <>\n      <Header />\n      <Container>\n        <Books />\n      </Container>\n    </>\n  );\n}\n\nexport default Dashboard;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport Dashboard from './Dashboard';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Dashboard />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.987cc879.svg\";"],"sourceRoot":""}